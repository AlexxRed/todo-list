{"version":3,"sources":["js/getRefs.js","js/todoTamplate.js","js/index.js"],"names":["getRefs","form","document","querySelector","todoList","itemTemplate","id","label","checked","refs","console","log","todos","startRenderToDo","markUpItems","map","todo","innerHTML","insertAdjacentHTML","join"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,MAAMA,EAAU,KACZ,CACHC,KAAMC,SAASC,cAAc,QAC7BC,SAAUF,SAASC,cAAc,iBAHlC,QAAA,QAAA;;ACQN,aARM,SAASE,GAAc,GAAEC,EAAF,MAAMC,EAAN,QAAaC,IAC/B,qBAAcF,oIAEsBE,EAAU,UAAY,sCACxCD,6FAI7B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA;;ACgBD,aAxBA,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,kBACA,MAAME,GAAO,EAAb,EAAA,WAEAC,QAAQC,IAAIF,EAAKR,MACjBS,QAAQC,IAAIF,EAAKL,UAGjB,IAAIQ,EAAQ,CACR,CAAEN,GAAI,EAAGC,MAAO,gBAAiBC,SAAS,GAC1C,CAAEF,GAAI,EAAGC,MAAO,gBAAiBC,SAAS,GAC1C,CAAEF,GAAI,EAAGC,MAAO,gBAAiBC,SAAS,GAC1C,CAAEF,GAAI,EAAGC,MAAO,gBAAiBC,SAAS,IAG9C,SAASK,EAAgBD,GACfE,MAAAA,EAAcF,EAAMG,IAAKC,IACpB,EAAaA,EAAAA,cAAAA,IAExBN,QAAQC,IAAIG,GACZL,EAAKL,SAASa,UAAY,GAC1BR,EAAKL,SAASc,mBAAmB,YAAaJ,EAAYK,KAAK,KAGnEN,EAAgBD","file":"js.ba813a91.js","sourceRoot":"../src","sourcesContent":["export const getRefs = () => {\n    return {\n        form: document.querySelector('form'),\n        todoList: document.querySelector('.list-group'),\n    }\n}","export function itemTemplate ({ id, label, checked }) {\n    return `<li data-id=${id} class=\"list-group-item list-group-item-action\">\n    <label class=\"todo-label\">\n    <input class=\"todo-check\" type=\"checkbox\" ${checked ? 'checked' : ''} />\n    <span class=\"todo-text\">${label}</span>\n    </label>\n    <button type=\"button\" class=\"btn btn-danger\">x</button>\n</li>`;\n}\n","import { getRefs } from './getRefs'\nimport {itemTemplate} from './todoTamplate'\nconst refs = getRefs();\n\nconsole.log(refs.form);\nconsole.log(refs.todoList);\n\n\nlet todos = [\n    { id: 1, label: 'template text', checked: true },\n    { id: 1, label: 'template text', checked: false },\n    { id: 1, label: 'template text', checked: false },\n    { id: 1, label: 'template text', checked: false },\n];\n\nfunction startRenderToDo(todos) {\n    const markUpItems = todos.map((todo) => {\n        return itemTemplate(todo)\n    });\n    console.log(markUpItems);\n    refs.todoList.innerHTML = '';\n    refs.todoList.insertAdjacentHTML('beforeend', markUpItems.join(''))\n};\n\nstartRenderToDo(todos)"]}