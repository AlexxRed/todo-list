{"version":3,"sources":["js/getRefs.js","js/todoTamplate.js","js/index.js"],"names":["getRefs","form","document","querySelector","todoList","itemTemplate","id","label","checked","refs","console","log","addEventListener","onToDoElement","todos","startRenderToDo","markUpItems","map","todo","innerHTML","insertAdjacentHTML","join","deleteToDo","filter","Number","toggleToDoCheck","e","target","nodeName","closest","dataset"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,MAAMA,EAAU,KACZ,CACHC,KAAMC,SAASC,cAAc,QAC7BC,SAAUF,SAASC,cAAc,iBAHlC,QAAA,QAAA;;ACQN,aARM,SAASE,GAAc,GAAEC,EAAF,MAAMC,EAAN,QAAaC,IAC/B,qBAAcF,oIAEsBE,EAAU,UAAY,sCACxCD,6FAI7B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA;;ACgDA,aAxDD,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,kBACA,MAAME,GAAO,EAAb,EAAA,WAEAC,QAAQC,IAAIF,EAAKR,MACjBS,QAAQC,IAAIF,EAAKL,UAEjBK,EAAKL,SAASQ,iBAAiB,QAASC,GAExC,IAAIC,EAAQ,CACR,CAAER,GAAI,EAAGC,MAAO,gBAAiBC,SAAS,GAC1C,CAAEF,GAAI,EAAGC,MAAO,gBAAiBC,SAAS,GAC1C,CAAEF,GAAI,EAAGC,MAAO,gBAAiBC,SAAS,GAC1C,CAAEF,GAAI,EAAGC,MAAO,gBAAiBC,SAAS,IAG9C,SAASO,IACCC,MAAAA,EAAcF,EAAMG,IAAKC,IACpB,EAAaA,EAAAA,cAAAA,IAExBT,EAAKL,SAASe,UAAY,GAC1BV,EAAKL,SAASgB,mBAAmB,YAAaJ,EAAYK,KAAK,KAKnE,SAASC,EAAWhB,GAChBQ,EAAQA,EAAMS,OAAQL,GAASA,EAAKZ,KAAOkB,OAAOlB,IAClDI,QAAQC,IAAI,UAGhB,SAASc,EAAgBnB,GACrBQ,EAAQA,EAAMG,IAAKC,GAAUA,EAAKZ,KAAOkB,OAAOlB,GAAM,IAAKY,EAAMV,SAAUU,EAAKV,SAAYU,GAC5FR,QAAQC,IAAI,UAGhB,SAASE,EAAca,GACfA,GAAsB,OAAtBA,EAAEC,OAAOC,SAIR,CACK,MAAA,GAAEtB,GAAOoB,EAAEC,OAAOE,QAAQ,MAAMC,QAC9BJ,OAAAA,EAAEC,OAAOC,UACR,IAAA,SACDN,EAAWhB,GACX,MACC,IAAA,QACA,IAAA,QACA,IAAA,KACA,IAAA,OACDmB,EAAgBnB,GAGxBS,SAhBAL,QAAQC,IAAI,kBAdpBI","file":"js.313bab4e.js","sourceRoot":"../src","sourcesContent":["export const getRefs = () => {\n    return {\n        form: document.querySelector('form'),\n        todoList: document.querySelector('.list-group'),\n    }\n}","export function itemTemplate ({ id, label, checked }) {\n    return `<li data-id=${id} class=\"list-group-item list-group-item-action\">\n    <label class=\"todo-label\">\n    <input class=\"todo-check\" type=\"checkbox\" ${checked ? 'checked' : ''} />\n    <span class=\"todo-text\">${label}</span>\n    </label>\n    <button type=\"button\" class=\"btn btn-danger\">x</button>\n</li>`;\n}\n","import { getRefs } from './getRefs'\nimport {itemTemplate} from './todoTamplate'\nconst refs = getRefs();\n\nconsole.log(refs.form);\nconsole.log(refs.todoList);\n\nrefs.todoList.addEventListener('click', onToDoElement)\n\nlet todos = [\n    { id: 1, label: 'template text', checked: true },\n    { id: 2, label: 'template text', checked: false },\n    { id: 3, label: 'template text', checked: false },\n    { id: 4, label: 'template text', checked: false },\n];\n\nfunction startRenderToDo() {\n    const markUpItems = todos.map((todo) => {\n        return itemTemplate(todo)\n    });\n    refs.todoList.innerHTML = '';\n    refs.todoList.insertAdjacentHTML('beforeend', markUpItems.join(''))\n};\n\nstartRenderToDo()\n\nfunction deleteToDo(id) {\n    todos = todos.filter((todo) => todo.id !== Number(id))\n    console.log(\"delete\");\n};\n\nfunction toggleToDoCheck(id) {\n    todos = todos.map((todo) =>  todo.id === Number(id) ? { ...todo, checked: !todo.checked } : todo)\n    console.log('toggle');\n}\n\nfunction onToDoElement(e) {\n    if (e.target.nodeName === 'UL') {\n        console.log('ne tuda tuknul');\n        return\n    }\n    else {\n        const { id } = e.target.closest('li').dataset\n        switch (e.target.nodeName) {\n            case 'BUTTON':\n                deleteToDo(id);\n                break;\n            case 'INPUT':\n            case 'LABEL':\n            case 'LI':\n            case 'SPAN':\n                toggleToDoCheck(id);\n                break;\n        }\n        startRenderToDo()\n    }\n}"]}